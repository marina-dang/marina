print("This is my first python file")
# print a word
print("love")
# we use hash [#] symbol to write a single-line comment, for example:
# declare a variable
name = "Mei"
# print name
print (name) #Mei
# Multiline Comments
# Python doesn't have a dedicated method to write multi-line comments.
# However, we can achieve the same effect by using the hash [#] symbol at the begining of each line.
'''We can also use multiline strings as comments. 
Just like this'''
print ("above two lines are multiline comments using multiline strings")
# Prevent Executing Code Using Comments
print ("peace and love")
number1 =10
number2 =15
sum = number1 + number2
print ("SUM:", sum)
# print ("The product:" product)
'''In most cases, always use comments to explain "why" rather than "how" '''
#####
# Python Variables
number = 10  # number is a variable storing the value 10
# assign value to site_name variable
site_name = "programiz.com"
print (site_name)
# output: programiz.com
# Python is a type-inferred language, so we don't have to explicitly define the variable type.
# It automatically knows that programiz.com is a string and declares the site_name variable as a string.
'''Change value of Varaible'''
product_name = "SIM"
print (product_name)
# change value ffrom SIM to VVS
product_name = "VVS"
print (product_name)

# Assigning multiple values to multiple variables
division_name, product_name, release_name = "VCF", "VVS", "12.10"
# print (division_name), (product_name), (release_name)
print ("Division Name:", division_name, "Product Nmae:", product_name, "Release Nmae:", release_name)
print ("Division Name:", division_name)
print ("Product Nmae:", product_name)
print ("Release Nmae:", release_name)
# Assign same value to multiple variables
PM = QE = DEV = BA = "Mei Dang"
print (PM, QE, DEV, BA)

c1 = 12 + 0.2j 
print("c1Value: ", c1) 
print("c1Type", type(c1)) 
c2 = 6 - 1.2j 
print("c2Value: ", c2) 
#对复数进行简单计算 - 理解不了复数的运算规则
print("c1+c2: ", c1+c2)  # Output: c1+c2:  (18-1j)
print("c1*c2: ", c1*c2)  # Output: c1*c2:  (72.24-13.2j)
people = ("Mei", "Ming")
female = people
print ("Female:", female)  # Output: Female: ('Mei', 'Ming')
#############
color = "green"
highlight = "yellow"
highlight = color
print (highlight)   # Output: green
####
color = "green"
highlight = color
highlight = "yellow"
print (highlight)  # Output: yellow
######
address = "Jinye 1st Road, Xi'an"
contact = "029-12847362"
Resturant = "Hanburg King"
print ("Restruant:", Resturant, "; Address:", address, "; Contact:", contact)
#### implicit conversion from integer to float
## Python always converts smaller data type to larger data types to avoid the loss of data.
integer_number = 1211
float_number = 12.11
new_number = integer_number - float_number
print ("New Number:", new_number)
print ("Data Type:", type(new_number)) 
# Explicit conversion of data type
num_str = "1211"
num_integer = 334
print ("Data type of num_str before type casting:", type(num_str))
num_str = int(num_str)   # type casting
print ("Data type of num_str after type casting:", type(num_str))
num_sum = num_str + num_integer
print ("SUM:", num_sum)
print ("Data Type:", type(num_sum))
# Type Conversion is the conversion of an object from one data type to another data type.
# Implicit Type Conversion is automatically performed by the Python interpreter.
# Python avoids the loss of data in Implicit Type Conversion.
# Explicit Type Conversion is also called Type Casting, the data types of objects are converted using predefined functions by the user.
# In Type Cating, loss of data may occur as we enforce the object to a specific data type.
'''Input and Output''' 
'''Syntax of print()''' 
import sys  
# "NameError: name 'sys' is not defiend" occurs if sys module is not imported.
import time
print ("Hello, world!\nNew Line", 1,2,3, sep="\n", end=" ^ _ ^\n", file=sys.stdout, flush=True)
print ("Hello, world!\nNew Line", 1,2,3, sep="\n", end=" ^ _ ^\n")
print ("Hello, world!\nNew Line", 1,2,3, sep="\n", end=" ^ _ ^\n", file=sys.stderr, flush=True)


for i in range(10): 
print(f"Line {i}", end=" \n", flush=True)
time.sleep(1) # mean to pause the execution of the program for 1 second after printing each line.
# range(10) expressioin is used to generate i sequence of numbers from 0 to 9.
# for a in range(10) loop means "for each number i in the sequence generated by range(10), variable i will take each of the values in the range, one by one, as the loop iterates."

for i in range(10): 
print(f"Number: {i}", end=", ", flush=True)
time.sleep(1)

for i in range(10): 
print(f"Line {i}", end="\n", flush=True)
time.sleep(1)

print("It is snowing outside", end="")
print("it is sunny outside")

Import sys
print("Merry", "Chris", end="", file=sys.stdout, flush=True)
print("Christmas", end='')

print ("Hello, world!", "New Line")
#### Output formating ###
x=5
y=6
z=11
print("Value of x is {}, y is {} and z is {}.".format(x,y,z))  # Output: Value of x is 5, y is 6 and z is 11.

####
num=input("Enter a number: ")
print("You entered:", num)
print("Data type of num:", type(num))
# run num=input("Enter a number: ") first, then input a number on output, then press Enter on your keyborad
# Then run the rest two lines
'''Convert user input into number using int() or float() functions as below:'''
num=int(input("Enter a number: "))
print("You entered:", num)
print("Data type of num:", type(num))

num=float(input("Enter a number: "))
print("You entered:", num)
print("Data type of num:", type(num))

'''Python Operators'''
'''Python Arithmetic Operators'''
print(5+7)
print(12-4)
print(3*7)
print(45/5)
print(11//2)
print(11%2)
print(11**2)
'''Python Assignment Operators'''
a=8
b=5
a+=b
print(a)

a=8
b=5
a-=b
print(a)

a=8
b=5
a*=b
print(a)

a=8
b=5
a/=b
print(a)

a=8
b=5
a%=b
print(a)

a=8
b=5
a**=b
print(a)

a=8
b=5
a//=b
print(a)

'''Python Comparison Operators'''
a=12
b=4
print("if a=12, b=4, then a=b is", a==b, "\nif a=12, b=4, then a>b is", a>b, 
      "\nif a=12, b=4, then a<b is", a<b)

'''Python Logical Operators'''
a=8
b=7
print((a>4) and (b>4))

a=8
b=7
print((a<4) or (b<4))

a=8
b=7
print(not (b>4))

a=8
b=7
print((b>4))

'''Python Bitwise Operators'''
print(bin(230))
print(bin(-6))
print(bin(5 | 3))
print(bin(5 & 3))
print(bin(5 ^ 3))
print(bin(~2))

'''Python Convert Binary Number to Decimal Number'''
print(int("101", 2))
print(int("1101", 2))
print(int("11111010", 2))

'''Python Bitwise Right Shift'''
print(bin(12 >> 5))  # 12 is decimal number

# 11的二进制=1011，算法如下
# 11/2=5, reminder =1
# 5/2=2, reminder=1
# 2/2=1 reminder=0
# 1/2=0 reminder=1
print(11 >> 1) # output is decimal = 5
print(11 >> 2) # output is decimal = 2
print(11 >> 3) # output is decimal = 1
print(11 >> 4) # output is decimal = 0

print((11 >> 1), (11 >> 2), (11 >> 3)) 
print (bin(521))
print(int("1000001001",2))

'''if...else Statement'''
score=int(input("Enter your score: "))
if score >= 60:
      print("You have passed your exam.")
      print("Congratulations!")
if score < 60:
      print("Sorry, you have failed your exam.")

if score>=60:
      print("You have passed your exam.")
else:
      print("Sorry, you have failed your exam.")
#You have to run the if...esl commands one line by another.


